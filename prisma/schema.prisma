generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model NFT {
  id               String   @id @default(cuid())
  tokenId          String   @db.VarChar(200)
  ownerId          String
  name             String   @db.VarChar(255)
  contractAddress  String   @db.VarChar(100)
  imageUrl         String?  @db.Text
  description      String?  @db.Text
  rarity           String?  @default("Common")
  attack           Int?     @default(1)
  health           Int?     @default(1)  
  speed            Int?     @default(1)
  special          String?
  metadata         Json?    @db.Json
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  User             User     @relation(fields: [ownerId], references: [id])

  @@unique([tokenId, contractAddress])
  @@map("NFT")
}

model User {
  id          String    @id
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  address     String    @unique
  provider    String?
  balance     String?
  assets      String?
  lastUpdated DateTime?
  NFT         NFT[]
  teams       Team[]
  @@map("User")
}

model Team {
  id          String   @id @default(cuid())
  name        String
  ownerId     String
  // Relation to User; keep field name 'User' to match includes in code
  User        User     @relation(fields: [ownerId], references: [id])
  nftIds      String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  battlesWon  Int      @default(0)
  battlesLost Int      @default(0)
  isActive    Boolean  @default(true)

  @@map("Team")
}
